# logical operators

# ლოგიკური ოპერატორი არის სიტყვა რომელიც ორ პირობას ერთმანეთთან აკავშირებს. და აბრუნებს ბულეან ტიპის მნიშვნელობას რადგან ეს წინადადებები ან ჭეშმარიტებას ექვემდებარება ან სიცრუეს True or False

# ეს ოპერატორებია:

# and - და
# or - ან
# not - უარყოფა

# მოდი ეს კონცეფცია უკეთესად რომ გავიგოთ მოვიყვანოთ მაგალითი.

# დავუშვათ რომ კაცი მიდის მაღაზიაში. მაღაზიიდან უნდა წამოიღოს წყალი და პური. ყურადღება მიაქციე სიტყვა "და"-ს. ეს იმას ნიშნავს რომ ორივე პირობა უნდა შესრულდეს, პირველიც და მეორეც. 

# თუ მაღაზიაში არ აღმოჩნდა წყალი და აღმოჩნდა პური, ნიშნავს რომ კაცმა ვერ შეიძინა ერთ ერთი მათგანი, ეს ნიშნავს იმას რომ მან ორივე პირობა ვერ შეასრულა. ამიტომ მისი დავალება ჩაფლავდა

# იგივე ხდება მეორე შემთხვევაში, თუ მაღაზიაში არ აღმოჩნდა პური და აღმოჩნდა წყალი. ამ შემთხვევაშიც ჩაფლავებულია. ორივრ უნდა ეყიდა.

# თუ მაღაზიაში წყალიც იყო და პურიც, კაცმა ორივე შეიძინა და მისი დავალება წარმატებით შესრულებულია.

# ახლა გადმოვიტანოთ ეს მაგალითი პროგრამირებაში, მათემატიკური შედარების ოპერატორებით

# შევუსაბამოთ True ბულეან მნიშვნელობა კაცის ერთ ნაყიდ პროდუქტს

purchace = True
didnt_purchace = False

print(purchace and didnt_purchace)  
# False, რადგან ერთ-ერთი პირობა მცდარია

print(didnt_purchace and purchace)
# False, რადგან ერთ-ერთი პირობა მცდარია

print(didnt_purchace and didnt_purchace)
# False რადგან ორივე პირობა მცდარია

print(purchace and purchace)
# True, რადგან ორივე პირობა ჭეშმარიტია


# ახლა განვიხილოთ or ლოგიკური ოპერატორი

# თუ კაცი მიდის მაღაზიაში და მას დაავალეს რომ ეყიდა ან წყალი ან პური, და მაღაზიაში არ აღმოჩნდა რომელიმე, ეს ნიშნავს რომ მან თავის დავალება შეასრულა რადგან იყიდა ერთ-ერთი მათგანი. მას რომ სულ არაფერი ეყიდა მხოლოდ მაშინ იქნებოდა False. 

purchace = True
didnt_purchace = False

print(purchace or purchace)
# True, რადგან ორივე პირობა შეასრულა

print(didnt_purchace or purchace)
# True, რადგან ერთ-ერთი პირობა მაინც შეასრულა

print(purchace or didnt_purchace)
# True, რადგან ერთ-ერთი პირობა მაინც შეასრულა

print(didnt_purchace or didnt_purchace)
# False, რადგან არც ერთი პირობა არ შეუსრულებია


# not operator

# not - ნიშნავს უარყოფას. თუ True ბულეან მნიშვნელობა ვუარყავით ანუ თუ წინადადება არ არის სწორი ეს ნიშავს იმას რომ არის False

# მაგ:

print(not True)
# False. 

print(not False)
# True
